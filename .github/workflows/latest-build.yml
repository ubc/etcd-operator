name: Docker image
on:
  workflow_run:
    workflows:
      - Testing E2E
    types:
      - completed
    branches:
      - 'main'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Check out code into the Go module directory
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        with:
          config: .github/buildkitd.toml
          version: v0.8.1
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
         images: lthub/etcd-operator
         # generate Docker tags based on the following events/attributes
         tags: |
           type=schedule
           type=ref,event=branch
           type=ref,event=pr
           type=ref,event=tag
           type=semver,pattern={{version}}
           type=semver,pattern={{major}}.{{minor}}
           type=semver,pattern={{major}}
           type=sha

      -
        name: Build
        uses: docker/build-push-action@v3
        with:
#          context: .
#          tags: |
#            ghcr.io/${{ github.repository_owner }}/etcd-operator:latest
#            ghcr.io/${{ github.repository_owner }}/etcd-operator:${{ github.sha }}
#          platforms: linux/amd64,linux/arm64
#          push: true
#          build-args: |
#            REVISION=${{github.sha}}
#          cache-from: type=gha
#          cache-to: type=gha

          context: ./
          push: ${{ github.event_name != 'pull_request'  }}
          tags: ${{ steps.meta.outputs.tags  }}
          labels: ${{ steps.meta.outputs.labels  }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
